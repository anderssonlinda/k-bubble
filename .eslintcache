[{"/Users/lindaandersson/ga/code-along/project_four/src/App.js":"1","/Users/lindaandersson/ga/code-along/project_four/src/reportWebVitals.js":"2","/Users/lindaandersson/ga/code-along/project_four/src/HealthStatus.js":"3","/Users/lindaandersson/ga/code-along/project_four/src/HealthBar.js":"4","/Users/lindaandersson/ga/code-along/project_four/src/Functionality.js":"5","/Users/lindaandersson/ga/code-along/project_four/src/Actions.js":"6","/Users/lindaandersson/ga/code-along/project_four/src/Shower.js":"7","/Users/lindaandersson/ga/code-along/project_four/src/Party.js":"8","/Users/lindaandersson/ga/code-along/project_four/src/Train.js":"9","/Users/lindaandersson/ga/code-along/project_four/src/index.js":"10","/Users/lindaandersson/ga/code-along/project_four/src/Feed.js":"11","/Users/lindaandersson/ga/code-along/project_four/src/Toilet.js":"12","/Users/lindaandersson/ga/code-along/project_four/src/NewGame.js":"13"},{"size":185,"mtime":1606782055542,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1606691737726,"results":"16","hashOfConfig":"15"},{"size":679,"mtime":1606971995073,"results":"17","hashOfConfig":"15"},{"size":246,"mtime":1606888842285,"results":"18","hashOfConfig":"15"},{"size":6102,"mtime":1606966719006,"results":"19","hashOfConfig":"15"},{"size":2384,"mtime":1606964525060,"results":"20","hashOfConfig":"15"},{"size":983,"mtime":1606964871318,"results":"21","hashOfConfig":"15"},{"size":631,"mtime":1606964814567,"results":"22","hashOfConfig":"15"},{"size":359,"mtime":1606965058821,"results":"23","hashOfConfig":"15"},{"size":500,"mtime":1606691737724,"results":"24","hashOfConfig":"15"},{"size":479,"mtime":1606965073547,"results":"25","hashOfConfig":"15"},{"size":245,"mtime":1606965053534,"results":"26","hashOfConfig":"15"},{"size":324,"mtime":1606895875545,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ipi85w",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/lindaandersson/ga/code-along/project_four/src/App.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/reportWebVitals.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/HealthStatus.js",[],["58","59"],"/Users/lindaandersson/ga/code-along/project_four/src/HealthBar.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/Functionality.js",["60","61","62","63","64","65","66","67","68","69"],"import React, { Component } from 'react'\nimport HealthStatus from './HealthStatus'\nimport NewGame from './NewGame'\nimport Actions from './Actions'\nimport Shower from './Shower'\nimport Party from './Party'\nimport Train from './Train'\nimport Feed from './Feed'\nimport Toilet from './Toilet'\n\nimport './Functionality.css'\nimport normKoala from './K-norm-min.png'\nimport deadKoala from './K-ded-min.gif'\n\nexport default class Functionality extends Component{\n\n    state = {\n        hunger: 10,\n        boredom: 6,\n        dirty: 10,\n        toilet: 4,\n        action: null,\n        healthPoints: 10\n    }\n\n    isNotFull = (type) => {\n        return type < 10\n    }\n\n    isDead = () => {\n        return this.state.healthPoints <= 0 \n    }\n\n    isHappy = () => {\n        return this.state.hunger < 5 && this.state.dirty < 5 && this.state.toilet < 5 && this.state.boredom < 5\n    }\n\n    resetActivity = (time) => {\n        setTimeout(()=> {\n            this.setState({\n                action: null\n            })\n            document.body.style.backgroundImage= \"\";\n        }, time)\n    }\n\n    restartGame = () => {\n        this.setState({\n            hunger: 10,\n            boredom: 6,\n            dirty: 10,\n            toilet: 4,\n            action: null,\n            healthPoints: 10 \n        })\n    }\n\n    adjustHealthPoints = () => {\n        // return this.state.hunger < 5 && this.state.dirty < 5 && this.state.toilet < 5 && this.state.boredom < 5\n        if(this.isHappy()){\n            this.setState({\n                healthPoints: this.state.healthPoints += 1\n            })\n        } else {\n            this.setState({\n                healthPoints: this.state.healthPoints -= 1\n            })\n        }\n    }\n\n    adjustDirtyStatus = (amount) => {\n        let dirtyStatus = this.state.dirty\n\n        if(this.isNotFull(this.state.dirty)){\n            dirtyStatus + amount > 10 ? amount = (10-dirtyStatus) : amount = amount\n\n            this.setState({\n                dirty: this.state.dirty += amount\n            })\n        }\n    }\n\n    adjustHungerStatus = (amount) => {\n        let hungerStatus = this.state.hunger\n        if(this.isNotFull(hungerStatus)){\n            hungerStatus + amount > 10 ? amount = (10-hungerStatus) : amount = amount\n            this.setState({\n                hunger: hungerStatus += amount\n            })\n        }\n    }\n\n    adjustToiletStatus = (amount) => {\n        let toiletStatus = this.state.toilet\n\n        if(this.isNotFull(this.state.toilet)){\n            toiletStatus + amount > 10 ? amount = (10-toiletStatus) : amount = amount\n\n            this.setState({\n                toilet: this.state.toilet += amount\n            })\n        }\n    }\n\n    adjustBoredomStatus = (amount) => {\n        if(this.isNotFull(this.state.boredom)){\n            this.setState({\n                boredom: this.state.boredom += amount\n            })\n        }\n    }\n\n    feed = () => {\n        let amount = 4\n        this.state.hunger < 4 ? amount = this.state.hunger : amount = 4\n        this.setState({\n            hunger: this.state.hunger -= amount,\n            action: 'feed'\n        })\n\n        this.adjustToiletStatus(3)\n\n        this.adjustHealthPoints()\n\n        this.resetActivity(7000)\n    }\n    \n    party = (e) => {\n        this.setState({\n            boredom: 0,\n            action: 'party'\n        })\n\n        this.adjustDirtyStatus(2)\n\n        this.adjustHungerStatus(3)\n\n        this.adjustToiletStatus(3)\n        \n        this.adjustHealthPoints()\n\n        this.resetActivity(7000)\n    }\n\n    wash = () => {\n        this.setState({\n            dirty: 0,\n            action: 'wash'\n        })\n        this.adjustHealthPoints()\n\n        this.adjustBoredomStatus(2)\n\n        this.resetActivity(4000)\n    }\n\n    train = () => {\n        if(this.state.boredom > 2){\n            this.setState({\n                boredom: this.state.boredom -= 3,\n                action: 'train'\n            })\n        } else {\n            this.setState({\n                boredom: 0,\n                action: 'train'\n            })\n        }\n      \n        this.adjustHungerStatus(3)\n        \n        this.adjustDirtyStatus(3)\n        \n        this.adjustHealthPoints()\n\n        this.resetActivity(4000)\n    }\n\n    toilet = () => {\n        this.setState({\n            toilet: 0,\n            action: 'toilet'\n        })\n\n        this.adjustDirtyStatus(2)\n\n        this.adjustHealthPoints()\n    \n        this.resetActivity(3000)\n    }\n\n    activity = () => {\n        let koalaImg = <img className=\"character\" src={normKoala} alt=\"\"/>\n        if(this.isDead()){\n            return <img className=\"character\" src={deadKoala} alt=\"\"/>\n        } else if(this.state.action === 'wash'){\n            return <Shower />\n        } else if (this.state.action === 'party'){\n            return <Party />\n        } else if(this.state.action === 'toilet'){\n            return <Toilet />\n        } else if(this.state.action === 'train'){\n            return <Train />\n        } else if(this.state.action === 'feed') {\n            return <Feed />\n        } else {\n            return koalaImg\n        }\n    }\n\n    render(){\n\n        return(\n            <div className=\"functionality\">\n                <section> \n                    {this.isDead()\n                        ?<NewGame restartGame={this.restartGame}/> \n                        :<HealthStatus \n                            hunger={this.state.hunger}\n                            boredom={this.state.boredom}\n                            dirty={this.state.dirty}\n                            toilet={this.state.toilet}\n                            healthPoints={this.state.healthPoints}\n                        />\n                    }\n                    <div className=\"koala\">\n                        {this.activity()}\n                    </div>\n                </section>\n                <Actions \n                    wash={this.wash}\n                    feed={this.feed}\n                    party={this.party}\n                    train={this.train}\n                    toilet={this.toilet}\n                />\n            </div>\n        )\n    }\n}   \n","/Users/lindaandersson/ga/code-along/project_four/src/Actions.js",[],["70","71"],"/Users/lindaandersson/ga/code-along/project_four/src/Shower.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/Party.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/Train.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/index.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/Feed.js",[],["72","73"],"/Users/lindaandersson/ga/code-along/project_four/src/Toilet.js",[],"/Users/lindaandersson/ga/code-along/project_four/src/NewGame.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":62,"column":31,"nodeType":"80","endLine":62,"endColumn":41},{"ruleId":"78","severity":1,"message":"79","line":66,"column":31,"nodeType":"80","endLine":66,"endColumn":41},{"ruleId":"81","severity":1,"message":"82","line":75,"column":78,"nodeType":"83","messageId":"84","endLine":75,"endColumn":84},{"ruleId":"78","severity":1,"message":"79","line":78,"column":24,"nodeType":"80","endLine":78,"endColumn":34},{"ruleId":"81","severity":1,"message":"82","line":86,"column":80,"nodeType":"83","messageId":"84","endLine":86,"endColumn":86},{"ruleId":"81","severity":1,"message":"82","line":97,"column":80,"nodeType":"83","messageId":"84","endLine":97,"endColumn":86},{"ruleId":"78","severity":1,"message":"79","line":100,"column":25,"nodeType":"80","endLine":100,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":108,"column":26,"nodeType":"80","endLine":108,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":117,"column":21,"nodeType":"80","endLine":117,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":160,"column":26,"nodeType":"80","endLine":160,"endColumn":36},{"ruleId":"74","replacedBy":"85"},{"ruleId":"76","replacedBy":"86"},{"ruleId":"74","replacedBy":"87"},{"ruleId":"76","replacedBy":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-self-assign","'amount' is assigned to itself.","Identifier","selfAssignment",["89"],["90"],["89"],["90"],"no-global-assign","no-unsafe-negation"]